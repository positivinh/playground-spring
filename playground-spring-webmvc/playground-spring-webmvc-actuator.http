### GET /actuator

GET {{baseUrl}}/actuator

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("_links"),  "unexpected response body")
    });
%}



### GET /actuator/health

GET {{baseUrl}}/actuator/health

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.status === 'UP',  "unexpected response body")

    });
%}

### GET /actuator/health/custom

GET {{baseUrl}}/actuator/health/custom

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.status === 'UP',  "unexpected response body")

    });
%}

### GET /actuator/info

GET {{baseUrl}}/actuator/info

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.build.name === 'playground-spring-webmvc',  "unexpected response body")

    });
%}


### GET /actuator/beans

GET {{baseUrl}}/actuator/beans

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.contexts.application.beans.hasOwnProperty("resourceApiController"),  "unexpected response body")
    });
%}

### GET /actuator/conditions

GET {{baseUrl}}/actuator/beans

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### GET /actuator/configprops

GET {{baseUrl}}/actuator/configprops

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### GET /actuator/env

GET {{baseUrl}}/actuator/env

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.defaultProfiles[0] === 'default',  "unexpected response body")

    });
%}

### GET /actuator/loggers

GET {{baseUrl}}/actuator/loggers

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.levels[1] === 'ERROR',  "unexpected response body")

    });
%}

### GET /actuator/scheduledtasks

GET {{baseUrl}}/actuator/scheduledtasks

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("cron"),  "unexpected response body")
        client.assert(response.body.hasOwnProperty("fixedDelay"),  "unexpected response body")
        client.assert(response.body.hasOwnProperty("fixedRate"),  "unexpected response body")
        client.assert(response.body.hasOwnProperty("custom"),  "unexpected response body")

    });
%}

### GET /actuator/httpexchanges

GET {{baseUrl}}/actuator/httpexchanges

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("exchanges"),  "unexpected response body")
    });
%}


### GET /actuator/metrics

GET {{baseUrl}}/actuator/metrics

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("names"),  "unexpected response body")
    });
%}

### GET /actuator/mappings

GET {{baseUrl}}/actuator/mappings

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.hasOwnProperty("contexts.application.mappings"),  "unexpected response body")
    });
%}

### GET /actuator/logfile

GET {{baseUrl}}/actuator/logfile

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
